<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "EventManager.(eventOrganization(Organizations, completion : ([RippleEvent]) -&gt; ()) -&gt; ()).(closure #1).(closure #1):EventManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "eventArray.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.(followingForUser(Users, completion : ([[String : AnyObject]]) -&gt; ()) -&gt; ()).(closure #1):UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.followingUsers(Users, completion : ([Users]) -&gt; ()) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "user.friends">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(membersInOrganizations(Organizations, completion : ([Users]?) -&gt; ()) -&gt; ()).(closure #1):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "collection.data[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.organizationForUser(Users, completion : ([Organizations]) -&gt; ()) -&gt; ():OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SearchViewController.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:SearchViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "user.fullName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.(getUserByIdSync(String) -&gt; Users?).(closure #1):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "ss.email">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "WhatsPulsingViewController.tableView(UITableView, numberOfRowsInSection : Int) -&gt; Int:WhatsPulsingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pulsing.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.loginToApp(String, password : String, completion : (Bool, NSError?) -&gt; ()) -&gt; ():API.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.followUsersWithConfirmedRequest(withCompletion : () -&gt; ()) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentUser().friends.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationProfileViewController.updateAvatar(withNewAvatarURL : String, storagePath : String, completion : (Bool, NSError?) -&gt; ()?) -&gt; ():OrganizationProfileViewController.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.(followUsersWithConfirmedRequest(withCompletion : () -&gt; ()) -&gt; ()).(closure #1).(closure #1):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "request.toUser">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(allUnfollowOrganizations(Int, completion : ([Organizations]?, NSError?) -&gt; ()) -&gt; ()).(closure #1):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.userOrgIds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(allUnfollowOrganizations(Int, completion : ([Organizations]?, NSError?) -&gt; ()) -&gt; ()).(closure #2):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "fault.message">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.createEvent(Organizations, event : Events, name : String, start : NSDate, end : NSDate, isPrivate : Bool, cost : Float, picture : UIImage, description : String, address : String, coordinate : CLLocationCoordinate2D, completion : (Bool, Events?) -&gt; ()) -&gt; ():EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationProfileViewController.prepareData() -&gt; ():OrganizationProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "organization!.members">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.(prepareData() -&gt; ()).(closure #1):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.selectedUser!.events">
            </PersistentString>
            <PersistentString
               value = "UserManager().currentUser().friends.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Users.friends.setter:Users.swift">
         <PersistentStrings>
            <PersistentString
               value = "newValue.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.allUnfollowOrganizations(Int, completion : ([Organizations]?, NSError?) -&gt; ()) -&gt; ():OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "userOrgIds">
            </PersistentString>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.prepareData() -&gt; ():ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectedUser!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.currentUser() -&gt; User:UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.(getUsersWithIgnoreListAndNotGoingOnEvent([String], event : RippleEvent, completion : ([Users], NSError?) -&gt; ()) -&gt; ()).(closure #2):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.(pulsingEvents(([[String : AnyObject]]) -&gt; ()) -&gt; ()).(closure #1).(closure #1):EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(followingOrganizationsForUser(Users, completion : ([Organizations]) -&gt; ()) -&gt; ()).(closure #1):OrganizationManager.swift">
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.prepareViews() -&gt; ():ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectedUser">
            </PersistentString>
            <PersistentString
               value = "selectedUser!.descr">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Users.populateFromBackendlessUser(BackendlessUser) -&gt; ():Users.swift">
         <PersistentStrings>
            <PersistentString
               value = "fullName">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.(allUnfollowUsers(Int, completion : ([Users]?, NSError?) -&gt; ()) -&gt; ()).(closure #1):UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "WhatsPulsingViewController.(sortedGeolocationAllEvents in _FDD249956358660A9F335BCD71C35FA1)() -&gt; ():WhatsPulsingViewController.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationProfileViewController.(prepareData() -&gt; ()).(closure #1):OrganizationProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.organization!.members.count">
            </PersistentString>
            <PersistentString
               value = "a.count">
            </PersistentString>
            <PersistentString
               value = "events.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.(prepareData() -&gt; ()).(closure #3):ProfileViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "org.picture">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ErrorHelper.convertFaultToNSError(Fault) -&gt; NSError:ErrorHelper.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.getInvitationOrganization(Organizations, completion : ([Users]) -&gt; ()) -&gt; ():UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.(initMe(() -&gt; ()) -&gt; ()).(closure #1):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.me!.friends.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.(createEvent(Organizations, event : RippleEvent, name : String, start : NSDate, end : NSDate, isPrivate : Bool, cost : Float, picture : UIImage, description : String, address : String, coordinate : CLLocationCoordinate2D, completion : (Bool, RippleEvent?) -&gt; ()) -&gt; ()).(closure #1):EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.followingForUser(Users, completion : ([[String : AnyObject]]) -&gt; ()) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "user.email">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.(eventOrganization(Organizations, completion : ([Events]) -&gt; ()) -&gt; ()).(closure #2):EventManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "fault.message">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SearchViewController.((loadUnfollowUsers in _AC5FD1D1B28BCC851C8EBA047C2F5C82)() -&gt; ()).(closure #1):SearchViewController.swift">
      </ContextState>
      <ContextState
         contextName = "static Users.userFromBackendlessUser(BackendlessUser) -&gt; Users:Users.swift">
         <PersistentStrings>
            <PersistentString
               value = "user.objectId">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.eventsFuture([RippleEvent], showPrivate : Bool) -&gt; [RippleEvent]:EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.(allUnfollowUsers(Int, completion : ([Users]?, NSError?) -&gt; ()) -&gt; ()).(closure #1).(closure #1):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "u.name">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.saveArrayOfEntities([AnyObject], completion : (Bool, NSError?) -&gt; ()) -&gt; ():API.swift">
      </ContextState>
      <ContextState
         contextName = "EventManager.(eventOrganization(Organizations, completion : ([RippleEvent]) -&gt; ()) -&gt; ()).(closure #1):EventManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "eventArray.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.(followUsersWithConfirmedRequest(withCompletion : () -&gt; ()) -&gt; ()).(closure #1):UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "collection.data">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.eventInformation(RippleEvent) -&gt; [[String : AnyObject]]:EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "EventManager.(createEvent(Organizations, event : RippleEvent, name : String, start : NSDate, end : NSDate, isPrivate : Bool, cost : Float, picture : UIImage, description : String, address : String, coordinate : CLLocationCoordinate2D, completion : (Bool, RippleEvent?) -&gt; ()) -&gt; ()).(closure #1).(closure #1).(closure #1):EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.getUser([String], organization : Organizations, completion : ([Users]) -&gt; ()) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(organizationForUser(Users, completion : ([Organizations]) -&gt; ()) -&gt; ()).(closure #2):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "fault.message">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "OrganizationProfileViewController.(saveOrganizationName() -&gt; ()).(closure #1).(closure #1):OrganizationProfileViewController.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(organizationForUser(Users, completion : ([Organizations]) -&gt; ()) -&gt; ()).(closure #1).(closure #1):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "organizations[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "WhatsPulsingViewController.isLocationEvents(RippleEvent) -&gt; Bool:WhatsPulsingViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MessagesManager.(getMessagesWithMe(([BackendlessMessage]?, NSError?) -&gt; ()) -&gt; ()).(closure #1).(closure #1):MessagesManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "messages[0]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.signUp(String, email : String, fullName : String, completion : (Bool, NSError?) -&gt; ()) -&gt; ():API.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.addEvent(Organizations, event : RippleEvent, completion : (Organizations?, NSError?) -&gt; ()) -&gt; ():OrganizationManager.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.(organizationForUser(Users, completion : ([Organizations]) -&gt; ()) -&gt; ()).(closure #1).(closure #1).(closure #1).(closure #1):OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "organizations.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.getUsersWithIgnoreList([String], completion : ([Users], NSError?) -&gt; ()) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EventManager.(updateEvent(RippleEvent, organization : Organizations, name : String, start : NSDate, end : NSDate, isPrivate : Bool, cost : Float, picture : UIImage, description : String, address : String, coordinate : CLLocationCoordinate2D, completion : (Bool, RippleEvent?) -&gt; ()) -&gt; ()).(closure #1).(closure #1).(closure #1):EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "EventManager.(createEvent(Organizations, event : Events, name : String, start : NSDate, end : NSDate, isPrivate : Bool, cost : Float, picture : UIImage, description : String, address : String, coordinate : CLLocationCoordinate2D, completion : (Bool, Events?) -&gt; ()) -&gt; ()).(closure #1).(closure #1):EventManager.swift">
      </ContextState>
      <ContextState
         contextName = "ChatViewController.(insertMessage in _64938C0C969654A70CF3E0D955D9BE98)(BackendlessMessage) -&gt; ():ChatViewController.swift">
      </ContextState>
      <ContextState
         contextName = "InviteUsersViewController.(prepareData() -&gt; ()).(closure #2):InviteUsersViewController.swift">
      </ContextState>
      <ContextState
         contextName = "EventManager.(eventOrganization(Organizations, completion : ([Events]) -&gt; ()) -&gt; ()).(closure #1):EventManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "organization.events.count">
            </PersistentString>
            <PersistentString
               value = "eventArray.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.(allUnfollowUsers(Int, completion : ([User]?, NSError?) -&gt; ()) -&gt; ()).(closure #2):UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "WhatsPulsingViewController.numberOfSectionsInTableView(UITableView) -&gt; Int:WhatsPulsingViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "pulsing.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileViewController.(updateAvatar(withNewAvatarURL : String, storagePath : String, completion : (Bool, NSError?) -&gt; ()?) -&gt; ()).((changeImageURL #1)(forPicture : Pictures) -&gt; ()).(closure #1):ProfileViewController.swift">
      </ContextState>
      <ContextState
         contextName = "OrganizationManager.membersInOrganizations(Organizations, completion : ([Users]?) -&gt; ()) -&gt; ():OrganizationManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "members.count">
            </PersistentString>
            <PersistentString
               value = "query.whereClause">
            </PersistentString>
            <PersistentString
               value = "organization.admins">
            </PersistentString>
            <PersistentString
               value = "organization.members.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "WhatsPulsingViewController.(prepareData() -&gt; ()).(closure #1):WhatsPulsingViewController.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
